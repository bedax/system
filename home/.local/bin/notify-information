#!/usr/bin/env python3

from collections import OrderedDict
import subprocess



def command(command, shell=False):
   return subprocess.check_output(command, shell=shell).decode("utf-8").strip()


def main():
   desktop = command("bspc query -T -d focused | jshon -e name -u", shell=True)
   time = command(["date", "+%A %d/%m/%y %H:%M:%S"])
   volume = command("volume-get")

   battery_output = command(["cat", "/sys/class/power_supply/BAT0/capacity"])
   battery = "{}%".format(battery_output)

   charging_output = command(["cat", "/sys/class/power_supply/AC/online"])
   charging = "yes" if bool(int(charging_output)) else "no"

   lines = OrderedDict()
   lines["charging"] = charging
   lines["battery"] = battery
   lines["volume"] = volume
   lines["desktop"] = desktop

   body = ""

   for i, (name, value) in enumerate(lines.items()):
      name_with_colon = "{}:".format(name)
      padded_value = '{: >4}'.format(value)

      spaces = " " * (len(time) - len(name_with_colon) - len(padded_value))

      body += "\n" if i > 0 else ""
      body += "{}{}{}".format(name_with_colon, spaces, padded_value)

   command(["notify-confirmation", "--urgency", "normal", time, body])



if __name__ == "__main__":
   main()
